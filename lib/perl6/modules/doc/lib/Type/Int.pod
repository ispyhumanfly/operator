=begin pod

=TITLE class Int

=SUBTITLE Integer (arbitrary-precision)

    class Int is Cool does Real { ... }

C<Int> objects store integral numbers of arbitrary size. C<Int>s are immutable.

There are two main syntax forms for C<Int> literals

    123         # Int in decimal notation
    :16<BEEF>   # Int in radix notations

Both forms allow underscores between any two digits which can serve as visual
separators, but don't carry any meaning:

    5_00000     # five Lakhs
    500_000     # five hundred thousand

=head1 Methods

=head2 routine chr

    multi sub    chr(Int:D ) returns Str:D
    multi method chr(Int:D:) returns Str:D

Returns a one-character string, by interpreting the integer as a Unicode
codepoint number and converting it the corresponding character.

=head2 routine expmod

    multi sub    expmod (Int:D: Int $y, Int $mod) returns Int:D
    multi method expmod (Int:D: Int $y, Int $mod) returns Int:D

Returns the given C<Int> raised to the C<$y> power within modulus C<$mod>.

=head2 routine is-prime

    multi sub    is-prime (Int:D $number, Int $tries = 100) returns Bool:D
    multi method is-prime (Int:D: Int $tries = 100) returns Bool:D

Returns C<True> if this C<Int> is known to be a prime, or is likely to be a
prime based on a probabilistic Miller-Rabin test. C<$tries> is the maximal
number of iterations the test is allowed to do.

Returns C<False> if this C<Int> is known not to be a prime.

=head2 routine lsb

    multi method lsb(Int:D:)
    multi sub    lsb(Int:D)

Returns L<Nil|/type/Nil> if the number is 0. Otherwise returns the zero-based
index from the right of the first 1 in the binary representation of the
number.

    say 0b01011.lsb;        # 0
    say 0b01010.lsb;        # 1
    say 0b10100.lsb;        # 2
    say 0b01000.lsb;        # 3
    say 0b10000.lsb;        # 4

=head2 routine msb

    multi method msb(Int:D:)
    multi sub    msb(Int:D)

Returns L<Nil|/type/Nil> if the number is 0. Otherwise returns the zero-based
index from the left of the first 1 in the binary representation of the
number.

    say 0b00001.msb;        # 0
    say 0b00011.msb;        # 1
    say 0b00101.msb;        # 2
    say 0b01010.msb;        # 3
    say 0b10011.msb;        # 4

=head2 routine unival

    multi sub    unival(Int:D)  returns Numeric
    multi method unival(Int:D:) returns Numeric

Returns the number represented by the Unicode codepoint with the given integer
number, or L<NaN> if it does not represent a number.

=head1 Operators

=head2 infix div

    multi sub infix:<div>(Int:D, Int:D) returns Int:D

Does an integer division, rounded down.

=end pod
